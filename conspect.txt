-------------------------------------------- GIT --------------------------------------------

---------------------------------- Настройка конфигурации -----------------------------------
* git version - Выводит версию git

* git config --global user.name "user name"   -> глобальное имя разработчика.  
* git config --global user.email "user email" -> глобальное email разработчика.

* git config  user.name "user name"   		  -> имя разработчика данного проекта.  
* git config  user.email "user email" 		  -> email разработчика данного проекта.

------------------------------------- Основные команды --------------------------------------

* git init 									  -> создаёт дерикторию .git в проекте.
* dir 										  -> позволяет просматривать содержимое текущей папки.

* nano filename								  -> Создаёт новый фаил.

* git add filename					          -> Индексирует конкретный фаил
* git add *	|| git add .			   		  -> Индексирует все файлы
* git commit -m "comment"					  -> Добавляет commit

* gitk 										  -> Открывакет редактор для просмотра commits

* git status 								  -> Выводит статус файлов проекта и ветку в которой находится Dev

------------------------------------- Истори коммитов -------------------------------------

* git log 									    -> Открывает историю Коммитов (ctrl + z -> Выход)

* git log --pretty=oneline					    -> Вывод коммитов в одну строку
* git log --pretty=oneline --max-count=3	    -> Выводит последние три коммита (вместо '3' любое число )
* git log --pretty=oneline --all			    -> Выводит все коммиты
* git log --pretty=oneline --author="User Name" -> Выводит коммиты по автору

* git log --pretty=format: "%h - %s : %ad [ %an ]" --date=short -> Вывод коммита в определённом формате

- %h  - Короткая версия хеш
- %s  - Комментарий коммита
- %ad - Вывод даты
- %an - Вывод автора

--date=short - Вывод короткой записи даты

------------------------------------- Git checkout -------------------------------------

* git checkout 'хеш'						-> откатываем проект к commit по указанному хеш
* git checkout master						-> Возврат к последниму коммиту ветки master(может быть и другая ветка)
* git checkout filename 					-> Возврат к последнему закоммиченному состоянию указанного файла

----------------------------- Отмена индексированных файлов -----------------------------

* git reset HEAD fileName					 -> возвращает фаил к последнему состоянию до индексирования

------------------------------------ Отмена коммита -------------------------------------

* git revert HEAD --no-edit					 -> возвращает на коммит назад
* git revert хеш --no-edit					 -> возвращает конкретному коммиту по указанному хешу
* git revert --abort						 -> отмена отката

------------------------------- Решение простого конфликта ------------------------------

